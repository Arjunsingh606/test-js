const registerFormArr = JSON.parse(localStorage.getItem("user")) || [];

let firstName = document.getElementById("first-name");
let lastName = document.getElementById("last-name");
let email = document.getElementById("email");
let password = document.getElementById("password");
let confirmPassword = document.getElementById("confirm-password");
let submitButton = document.getElementById("submit-btn");

submitButton.addEventListener("click", userRegister);

function userRegister(event) {
  event.preventDefault();
  registerFormValidation();

  if (
    !firstName.value ||
    !lastName.value ||
    !email.value  ||
    !password.value  ||
    !confirmPassword.value
  ) {
    return false;
  } else {
    const registraionObj = {
      firstName: firstName.value,
      lastName: lastName.value,
      email: email.value,
      // password: password.value,
      confirmPassword: confirmPassword.value,
    };
  console.log(registraionObj.password);
    registerFormArr.push(registraionObj);
    console.log(registraionObj);
    console.log(registerFormArr);
    localStorage.setItem("user", JSON.stringify(registerFormArr));
    resetField();
  }
  alert("register successfully, you can login now!!")
}

// validation part
const setError = (element, message) => {
  const inputControl = element.parentElement;
  const errorDisplay = inputControl.querySelector(".error");

  errorDisplay.innerText = message;
  inputControl.classList.add("error");
  inputControl.classList.remove("success");
};

const setSuccess = (element) => {
  const inputControl = element.parentElement;
  const errorDisplay = inputControl.querySelector(".error");

  errorDisplay.innerText = "";
  inputControl.classList.add("success");
  inputControl.classList.remove("error");
};

const registerFormValidation = () => {
  if (!firstName.value.trim()) {
    setError(firstName, "First Name is required");
  } else {
    const checkName = /[A-Z][a-zA-Z]/;
    if(!checkName.test(String(firstName.value))){
      setError(firstName, "Invalid  first name");
    }else{
      setSuccess(firstName);
    }
    
  }

  if (!lastName.value.trim()) {
    setError(lastName, "Last Name is required");
  } else {
    const checkName = /[A-Z][a-zA-Z]/;
    if(!checkName.test(String(lastName.value))){
      setError(lastName, "Invalid  last name");
    }else{
      setSuccess(lastName);
    }
    
  }

  if (!email.value.trim()) {
    setError(email, "Email is required");
  } else {
    const checkEmail =
    /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    if (!checkEmail.test(String(email.value).toLowerCase())) {
      setError(email, "Invalid email");
    } else {
      setSuccess(email);
      return true;
    }
  }

  if (!password.value.trim()) {
    setError(password, " Create Password");
  } else {
    const checkPassword = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,15}$/;;
    if(!checkPassword.test(String(password.value))){
      setError(password, "Choose strong password, like Apple@9292");
      return false;
    }else{
      setSuccess(password);
      return true;
    }
  }

  if (!confirmPassword.value.trim()){
    setError(confirmPassword, "Create Password");
  } else if(confirmPassword.value.trim() !== password.value.trim()){
    setError(confirmPassword, "Password does not match");
  } else {
    setSuccess(confirmPassword);

    const registraionObj = {
      firstName: firstName.value,
      lastName: lastName.value,
      email: email.value,
      // password: password.value,
      confirmPassword: confirmPassword.value,
    };
  console.log(registraionObj.password);
    registerFormArr.push(registraionObj);
    console.log(registraionObj);
    console.log(registerFormArr);
    localStorage.setItem("user", JSON.stringify(registerFormArr));
    resetField();
  }
};

//reset all field
const resetField = () => {
  firstName.value = "";
  lastName.value = "";
  email.value = "";
  password.value = "";
  confirmPassword.value = "";
  return true;
};





//otp part
<!DOCTYPE html>
<html>
<head>
    <title>Random Number Generator</title>
</head>
<body>
    <h1>Random Number: <span id="randomNumber">Loading...</span></h1>
    <button id="resendButton" onclick="generateRandomNumber()">Resend</button>

    <script>
        let intervalId;
        let randomNumber;

        // Function to generate a random 6-digit number
        function generateRandomNumber() {
            clearInterval(intervalId)
            randomNumber = Math.floor(100000 + Math.random() * 900000); // 6-digit random number
            document.getElementById("randomNumber").textContent = randomNumber;
            setRefreshTimer();
        }

        // Function to set a 30-second timer to refresh the random number
        function setRefreshTimer() {
            intervalId = setInterval(generateRandomNumber, 30000); // 30 seconds in milliseconds
        }

        // Initial generation of the random number
        generateRandomNumber();
    </script>
</body>
</html>



// otp 
let randomNumber = document.getElementById("random-number");
let resendButton = document.getElementById("resend-button");
let digitInput = document.getElementById("input-digit");
let verifyButton = document.getElementById("verify-btn");
let timer = document.getElementById("timer");
let intervalId;
let randomDigit;
function generateRandomNumber() {
  clearInterval(intervalId);
  randomDigit = Math.floor(100000 + Math.random() * 900000);
  randomNumber.innerHTML = randomDigit;
}

resendButton.addEventListener("click", setRefreshTimer);

generateRandomNumber();

function setRefreshTimer(e) {
  e.preventDefault();
  let intervalId = setTimeout(generateRandomNumber, 1000);

  //   countdown();
  //   resendButton.style.display = "none";

  var aa = setTimeout(countdown, 10000);
  function countdown() {
    resendButton.style.display = "block";
    console.log("hello");
  }

  hello();
  
}

verifyButton.addEventListener("click", () => {
  if (digitInput.value === String(randomDigit)) {
    console.log(randomDigit, "otp   matched");
    setTimeout(() => {
      window.location.replace("resetpassword.html");
    });
  } else {
    alert("invalid otp");
  }

  //   console.log(digitInput.value);
});

var aa = setTimeout(countdown, 10000);
function countdown() {
  resendButton.style.display = "block";
  console.log("hello");
}

hello();
function hello() {
  var timeLeft = 9;
  var elem = document.getElementById("timer");

  let vv = setInterval(() => {
    if (timeLeft == -1) {
      resendButton.style.display = "block";
    } else {
    //   resendButton.style.display = "none";

      elem.innerHTML = timeLeft + " sec remaining";
      timeLeft--;
    }
  }, 1000);
  resendButton.style.display = "none";
}
